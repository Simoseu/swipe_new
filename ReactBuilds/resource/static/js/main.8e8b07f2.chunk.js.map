{"version":3,"sources":["grip.svg","AttributeValue.jsx","Attribute.jsx","ResourceTable.jsx","App.jsx","reportWebVitals.js","index.jsx"],"names":["AttributeValue","props","useState","value","label","valueString","setValueString","type","datatype","editing","Container","fluid","className","Row","Col","Form","Control","name","onChange","event","newValue","target","Text","muted","inline","Label","as","id","custom","size","comparison","changeValue","ID","undefined","md","onClick","length","alert","edited","console","log","Attribute","showChangeHandler","attribute","show","isConstraint","modifiedValues","filter","changeAttribute","valueID","aux","indexOfProp","findIndex","draggableId","index","provided","snapshot","draggableProps","ref","innerRef","style","backgroundColor","isDragging","dragHandleProps","src","grip","alt","property","uri","map","Check","checked","ResourceTable","attributeID","newAttribute","resource","setResource","onDragEnd","result","destination","source","droppableId","droppedElement","splice","Table","striped","bordered","hover","droppableProps","placeholder","App","Navbar","variant","Brand","href","Nav","Link","Button","axios","post","esempio","window","open","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8e8b07f2.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/grip.8bc37f34.svg\";","import React, { useState } from \"react\";\r\n\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\n\r\nexport default function AttributeValue(props) {\r\n\t// Contiene il label o il value del valore.\r\n\tconst [valueString, setValueString] = useState(\r\n\t\tprops.value.label || props.value.value\r\n\t);\r\n\tconst type = getType();\r\n\r\n\tfunction getType() {\r\n\t\tif (props.value.label === null) {\r\n\t\t\tif (props.value.datatype === null) {\r\n\t\t\t\treturn props.value.type;\r\n\t\t\t} else {\r\n\t\t\t\treturn props.value.datatype;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\treturn \"literal\";\r\n\t\t}\r\n\t}\r\n\t// Funzione che rende modificabile il valore dell'attributo scelto dall'utente\r\n\tfunction editButtonHandler() {\r\n\t\t// Viene modificato il valore all'interno dell'oggetto che indica se si sta modificando il valore\r\n\t\tprops.value.editing = true;\r\n\t\t// Viene utilizzata la funzione del parent che permette di applicare le modifiche\r\n\t\tprops.changeValue(props.value.ID, props.value, undefined);\r\n\t\tconsole.log(props.value);\r\n\t}\r\n\r\n\t// Funzione che si occupa della modifica dei valori delle propietà da parte dell'utente\r\n\tfunction changeValueHandler(event) {\r\n\t\tconst newValue = event.target.value;\r\n\r\n\t\t/*\r\n\t\tconst comparison = props.value.comparison;\r\n\r\n\t\tif (\r\n\t\t\t(newValue.includes(\"<\") || newValue.includes(\">\")) &&\r\n\t\t\tcomparison !== \"numeric\"\r\n\t\t) {\r\n\t\t\talert(\r\n\t\t\t\t\"Puoi inserire '>' o '<' solo se effettui un confronto di tipo numerico\"\r\n\t\t\t);\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\t\r\n\t\tif (props.value.label !== null) {\r\n\t\t\tprops.value.label = newValue;\r\n\t\t} else {\r\n\t\t\tprops.value.value = newValue;\r\n\t\t}\r\n\t\t*/\r\n\t\t//props.changeValue(props.value.ID, props.value);\r\n\t\tsetValueString(newValue);\r\n\t}\r\n\r\n\tfunction possibleComparison() {\r\n\t\tif (type === \"literal\") {\r\n\t\t\treturn [\r\n\t\t\t\t<option value=\"exactstring\">Exact String</option>,\r\n\t\t\t\t<option value=\"substring\">Substring</option>,\r\n\t\t\t];\r\n\t\t}\r\n\t\tif (type === \"uri\") {\r\n\t\t\treturn [<option value=\"uri\">URI</option>];\r\n\t\t}\r\n\t\treturn [\r\n\t\t\t<option value=\"type-based\">\r\n\t\t\t\tType based comparison (default equal)\r\n\t\t\t</option>,\r\n\t\t\t<option value=\"regex\">Regex</option>,\r\n\t\t];\r\n\t}\r\n\r\n\tfunction changeComparison(event) {\r\n\t\tprops.value.comparison = event.target.value;\r\n\t\tprops.changeValue(props.value.ID, props.value, undefined);\r\n\t}\r\n\r\n\tfunction applyEdit() {\r\n\t\tif (valueString.length === 0) {\r\n\t\t\talert(\"non può essere vuoto\");\r\n\t\t} else {\r\n\t\t\tprops.value.edited = true;\r\n\t\t\tprops.value.editing = false;\r\n\t\t\tif (props.value.label !== null) {\r\n\t\t\t\tprops.value.label = valueString;\r\n\t\t\t} else {\r\n\t\t\t\tprops.value.value = valueString;\r\n\t\t\t}\r\n\t\t\tprops.changeValue(props.value.ID, props.value, true);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction undoEdit() {\r\n\t\tprops.value.editing = false;\r\n\t\tprops.changeValue(props.value.ID, props.value, undefined);\r\n\t}\r\n\t/* Se l'utente sta modificando il valore viene mostrato un form che permette la modifica e la selezione del tipo\r\n\t   di confronto che vuole effettuare per la nuova query */\r\n\treturn props.value.editing ? (\r\n\t\t<li>\r\n\t\t\t<Container fluid className=\"value-container\">\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\tname=\"propertyValue\"\r\n\t\t\t\t\t\t\tclassName=\"value\"\r\n\t\t\t\t\t\t\tvalue={valueString}\r\n\t\t\t\t\t\t\tonChange={changeValueHandler}\r\n\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t<Form.Text muted>\r\n\t\t\t\t\t\t\tThis value is type: \"{type}\"\r\n\t\t\t\t\t\t</Form.Text>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t<Form inline>\r\n\t\t\t\t\t\t\t<Form.Label className=\"my-1 mr-sm-2 float-sx\">\r\n\t\t\t\t\t\t\t\tChoose the type of comparison:\r\n\t\t\t\t\t\t\t</Form.Label>\r\n\r\n\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\tas=\"select\"\r\n\t\t\t\t\t\t\t\tclassName=\"my-1 mr-sm-2 float-dx\"\r\n\t\t\t\t\t\t\t\tid=\"inlineFormCustomSelectPref\"\r\n\t\t\t\t\t\t\t\tcustom\r\n\t\t\t\t\t\t\t\tsize=\"sm\"\r\n\t\t\t\t\t\t\t\tvalue={props.value.comparison}\r\n\t\t\t\t\t\t\t\tonChange={changeComparison}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{possibleComparison()}\r\n\t\t\t\t\t\t\t</Form.Control>\r\n\t\t\t\t\t\t</Form>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col className=\"btn-span\" md=\"auto\">\r\n\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t[\r\n\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\tid=\"applica\"\r\n\t\t\t\t\t\t\t\tclassName=\"editButton\"\r\n\t\t\t\t\t\t\t\tonClick={applyEdit}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tApplica\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t|\r\n\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\tid=\"annulla\"\r\n\t\t\t\t\t\t\t\tclassName=\"editButton\"\r\n\t\t\t\t\t\t\t\tonClick={undoEdit}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tAnnulla\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t</Container>\r\n\t\t</li>\r\n\t) : (\r\n\t\t<li className={props.value.edited ? \"modified\" : \"non-modified\"}>\r\n\t\t\t{props.value.label ? props.value.label : props.value.value}\r\n\t\t\t<span id=\"editButtonSpan\">\r\n\t\t\t\t[\r\n\t\t\t\t<button\r\n\t\t\t\t\tclassName=\"editButton\"\r\n\t\t\t\t\tid=\"modifica\"\r\n\t\t\t\t\tonClick={editButtonHandler}\r\n\t\t\t\t>\r\n\t\t\t\t\tEdit\r\n\t\t\t\t</button>\r\n\t\t\t\t]\r\n\t\t\t</span>\r\n\t\t</li>\r\n\t);\r\n}\r\n/**\r\n * \r\n\t\t\t\t<Row>\r\n\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t<span id=\"editButtonSpan\">[ Apply | Undo]</span>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t\t\r\n\t\t\t\t\t\t\t\t<option value=\"default\">\r\n\t\t\t\t\t\t\t\t\tDefault (exactString or equal)\r\n\t\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t\t\t<option value=\"substring\">Substring</option>\r\n\t\t\t\t\t\t\t\t<option value=\"numeric\">Numeric</option>\r\n\t\t\t\t\t\t\t\t<option value=\"regex\">\r\n\t\t\t\t\t\t\t\t\tRegular Expression\r\n\t\t\t\t\t\t\t\t</option>\r\n*/\r\n","import React from \"react\";\r\nimport { Draggable } from \"react-beautiful-dnd\";\r\n\r\nimport Form from \"react-bootstrap/Form\";\r\n\r\nimport grip from \"./grip.svg\";\r\n\r\nimport AttributeValue from \"./AttributeValue\";\r\n\r\nexport default function Attribute(props) {\r\n\tfunction showChangeHandler() {\r\n\t\tprops.attribute.show = !props.attribute.show;\r\n\t\t/*Se l'utente vuole che un'attributo venga mostrato nella pagina dei risultati e questo non è già un vincolo viene impostato il booleano\r\n\t\t * che lo identifica come vincolo */\r\n\t\tif (props.attribute.show && !props.attribute.isConstraint) {\r\n\t\t\tprops.attribute.isConstraint = true;\r\n\t\t} else {\r\n\t\t\t/*Se l'utente toglie il check all'attributo per non effettuarne lo show, e l'attributo non contiene valori modificati\r\n\t\t\t *viene impostato a falso il booleano che lo identifica come vincolo */\r\n\t\t\tif (!props.attribute.show && props.attribute.isConstraint) {\r\n\t\t\t\tconst modifiedValues = props.attribute.value.filter(\r\n\t\t\t\t\t(value) => value.edited\r\n\t\t\t\t);\r\n\t\t\t\tprops.attribute.isConstraint = modifiedValues.length > 0;\r\n\t\t\t}\r\n\t\t}\r\n\t\tprops.changeAttribute(props.attribute.ID, props.attribute);\r\n\t}\r\n\r\n\t/* Funzione che permette la modifica di un valore dell'attributo attraverso la sostituzione dell'oggetto modificato\r\n\t   con il nuovo, nell'oggetto che contiene la risorsa */\r\n\tfunction changeValue(valueID, newValue, isConstraint) {\r\n\t\tconst aux = props.attribute;\r\n\t\tif (isConstraint !== undefined) {\r\n\t\t\taux.isConstraint = isConstraint;\r\n\t\t}\r\n\t\tconst indexOfProp = aux.value.findIndex(\r\n\t\t\t(value) => value.ID === valueID\r\n\t\t);\r\n\t\taux.value[indexOfProp] = newValue;\r\n\t\tprops.changeAttribute(props.attribute.ID, aux);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Draggable draggableId={props.attribute.ID} index={props.index}>\r\n\t\t\t{(provided, snapshot) => (\r\n\t\t\t\t<tr\r\n\t\t\t\t\t{...provided.draggableProps}\r\n\t\t\t\t\tref={provided.innerRef}\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tbackgroundColor: snapshot.isDragging && \"#abcdef\",\r\n\t\t\t\t\t\t...provided.draggableProps.style,\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tclassName=\"attribute-row\"\r\n\t\t\t\t>\r\n\t\t\t\t\t<td className=\"drag-cell\" {...provided.dragHandleProps}>\r\n\t\t\t\t\t\t<img src={grip} alt=\"drag\" />\r\n\t\t\t\t\t</td>\r\n\r\n\t\t\t\t\t<td className=\"property-cell\">\r\n\t\t\t\t\t\t{props.attribute.property.label ||\r\n\t\t\t\t\t\t\tprops.attribute.property.uri}\r\n\t\t\t\t\t</td>\r\n\r\n\t\t\t\t\t<td className=\"value-cell\">\r\n\t\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t\t{props.attribute.value.map((value) => (\r\n\t\t\t\t\t\t\t\t<AttributeValue\r\n\t\t\t\t\t\t\t\t\tkey={value.ID}\r\n\t\t\t\t\t\t\t\t\tvalue={value}\r\n\t\t\t\t\t\t\t\t\tchangeValue={changeValue}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t</td>\r\n\r\n\t\t\t\t\t<td className=\"show-cell\">\r\n\t\t\t\t\t\t<Form.Check\r\n\t\t\t\t\t\t\ttype=\"checkbox\"\r\n\t\t\t\t\t\t\tname={props.attribute.ID}\r\n\t\t\t\t\t\t\tchecked={props.attribute.show}\r\n\t\t\t\t\t\t\tonChange={showChangeHandler}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</td>\r\n\t\t\t\t</tr>\r\n\t\t\t)}\r\n\t\t</Draggable>\r\n\t);\r\n}\r\n","import React from \"react\";\r\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\";\r\n\r\nimport Table from \"react-bootstrap/Table\";\r\n\r\nimport Attribute from \"./Attribute\";\r\n\r\nexport default function ResourceTable(props) {\r\n\t// Viene modificato l'attributo con i nuovi valori\r\n\tfunction changeAttribute(attributeID, newAttribute) {\r\n\t\tconst aux = [...props.resource];\r\n\t\tconst indexOfProp = aux.findIndex(\r\n\t\t\t(attribute) => attribute.ID === attributeID\r\n\t\t);\r\n\t\taux[indexOfProp] = newAttribute;\r\n\t\tprops.setResource(aux);\r\n\t}\r\n\r\n\tfunction onDragEnd(result) {\r\n\t\tconst { destination, source } = result;\r\n\t\t// Se destination è null, ovvero se l'utente trascina la riga dove non può essere spostata non viene effettuata nessuna modifca\r\n\t\tif (!destination) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (\r\n\t\t\tdestination.droppableId === source.droppableId &&\r\n\t\t\tdestination.index === source.index\r\n\t\t) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t// Swap di due elementi\r\n\t\t// [props.data[source.index], props.data[destination.index]] = [props.data[destination.index], props.data[source.index]]\r\n\r\n\t\t// Viene rimosso l'elemento trascinato in nuova posizione dall'utente e salvato nella vaiabile droppedElement\r\n\t\tlet droppedElement = props.resource.splice(source.index, 1)[0];\r\n\t\t// Viene inserito l'elemento nella nuova posizione\r\n\t\tprops.resource.splice(destination.index, 0, droppedElement);\r\n\t\tconsole.log(droppedElement, destination.index);\r\n\t\tconsole.log(\r\n\t\t\t\"elemento precedente : \",\r\n\t\t\tprops.resource[destination.index - 1]\r\n\t\t);\r\n\t\tconsole.log(\r\n\t\t\t\"elemento successivo : \",\r\n\t\t\tprops.resource[destination.index + 1]\r\n\t\t);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<DragDropContext onDragEnd={onDragEnd}>\r\n\t\t\t<Table striped bordered hover id=\"resource-table\">\r\n\t\t\t\t<thead>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<th className=\"drag-cell\">#</th>\r\n\t\t\t\t\t\t<th className=\"property-cell\">Proprietà</th>\r\n\t\t\t\t\t\t<th className=\"value-cell\">Valori</th>\r\n\t\t\t\t\t\t<th className=\"show-cell\">Show</th>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t</thead>\r\n\t\t\t\t{\r\n\t\t\t\t\t<Droppable droppableId=\"droppable\">\r\n\t\t\t\t\t\t{(provided) => (\r\n\t\t\t\t\t\t\t<tbody\r\n\t\t\t\t\t\t\t\tref={provided.innerRef}\r\n\t\t\t\t\t\t\t\t{...provided.droppableProps}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{props.resource.map((attribute, index) => (\r\n\t\t\t\t\t\t\t\t\t<Attribute\r\n\t\t\t\t\t\t\t\t\t\tkey={attribute.ID}\r\n\t\t\t\t\t\t\t\t\t\tindex={index}\r\n\t\t\t\t\t\t\t\t\t\tattribute={attribute}\r\n\t\t\t\t\t\t\t\t\t\tchangeAttribute={changeAttribute}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t{provided.placeholder}\r\n\t\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</Droppable>\r\n\t\t\t\t}\r\n\t\t\t</Table>\r\n\t\t</DragDropContext>\r\n\t);\r\n}\r\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\n// Import del file per lo style Sass\nimport \"./ResourcePage.scss\";\n\nimport Container from \"react-bootstrap/Container\"; //Container\nimport Navbar from \"react-bootstrap/Navbar\"; //Navbar\nimport Nav from \"react-bootstrap/Nav\"; //Nav\nimport Button from \"react-bootstrap/Button\";\n\nimport ResourceTable from \"./ResourceTable\";\n\nfunction App(props) {\n\tconst [resource, setResource] = useState(props.resource);\n\n\tfunction getResource() {\n\t\taxios.get(\"/prova\").then((response) => {\n\t\t\tsetResource(response.data);\n\t\t});\n\t}\n\n\t//useEffect(getResource, []);\n\n\tfunction prova() {\n\t\taxios.post(\"/redirect\", { esempio: \"prova prova prova\" });\n\t\twindow.open(\"/redirect\");\n\t}\n\n\treturn (\n\t\t<Container fluid id=\"main-container\">\n\t\t\t<Navbar variant=\"dark\" id=\"navbar\">\n\t\t\t\t<Navbar.Brand href=\"/homepage\">Swipe</Navbar.Brand>\n\n\t\t\t\t<Nav className=\"mr-auto\">\n\t\t\t\t\t<Nav.Link href=\"/homepage\">Home</Nav.Link>\n\t\t\t\t\t<Nav.Link href=\"#about\">About</Nav.Link>\n\t\t\t\t</Nav>\n\t\t\t</Navbar>\n\t\t\t{resource !== [] && resource !== undefined ? (\n\t\t\t\t<Container id=\"resource-container\" fluid>\n\t\t\t\t\t<ResourceTable\n\t\t\t\t\t\tresource={resource}\n\t\t\t\t\t\tsetResource={setResource}\n\t\t\t\t\t/>\n\t\t\t\t\t<br />\n\t\t\t\t\t<br />\n\t\t\t\t\t<Container fluid id=\"footer\">\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\tDopo aver modificato gli attributi per effettuare\n\t\t\t\t\t\t\tuna query clicca il tasto QUERY presente sulla\n\t\t\t\t\t\t\tdestra\n\t\t\t\t\t\t</p>\n\t\t\t\t\t\t<Button variant=\"success\" size=\"lg\" onClick={prova}>\n\t\t\t\t\t\t\tEsegui Query\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Container>\n\t\t\t\t</Container>\n\t\t\t) : (\n\t\t\t\t<Container id=\"notfound-container\">\n\t\t\t\t\t<h3 className=\"notfound-msg\">\n\t\t\t\t\t\tLa risorsa richiesta non è stata trovata\n\t\t\t\t\t</h3>\n\t\t\t\t\t<Button>GO TO HOMEPAGE</Button>\n\t\t\t\t</Container>\n\t\t\t)}\n\t\t</Container>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nimport Home from \"./home/Home\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App resource={window.resource} />\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
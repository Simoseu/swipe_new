{"version":3,"sources":["reportWebVitals.js","resource/grip.svg","resource/AttributeValue.jsx","resource/Attribute.jsx","resource/ResourceTable.jsx","resource/ResourcePreview.jsx","resource/tail-spin.svg","resource/ResourcePage.jsx","index.jsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","AttributeValue","props","useState","value","label","valueString","setValueString","type","datatype","editing","Container","fluid","className","Row","Col","Form","Control","name","onChange","event","newValue","target","Text","muted","inline","Label","as","id","custom","size","comparison","changeValue","ID","undefined","md","onClick","length","alert","edited","console","log","Attribute","showChangeHandler","attribute","show","isConstraint","modifiedValues","filter","changeAttribute","valueID","aux","indexOfProp","findIndex","draggableId","index","provided","snapshot","draggableProps","ref","innerRef","style","backgroundColor","isDragging","dragHandleProps","src","grip","alt","property","uri","map","Check","checked","ResourceTable","attributeID","newAttribute","resource","setResource","onDragEnd","result","destination","source","droppableId","droppedElement","splice","attributes","axios","post","response","catch","error","Table","striped","bordered","hover","droppableProps","placeholder","ResourcePreview","endpointUrl","language","window","location","href","comment","fontWeight","values","ResourcePage","requestedResource","endpoint","request","setRequest","queryResult","setQueryResult","selectedTab","setSelectedTab","isLoading","setIsLoading","a","resourceCopy","constraints","cancel","axiosSource","CancelToken","cancelToken","token","data","message","loadingImage","Navbar","variant","Brand","Nav","Link","Tabs","activeKey","onSelect","tab","Tab","eventKey","title","Button","disabled","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.00a230d6.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export default __webpack_public_path__ + \"static/media/grip.8bc37f34.svg\";","import React, { useState } from \"react\";\r\n\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\n\r\nexport default function AttributeValue(props) {\r\n\t// Contiene il label o il value del valore.\r\n\tconst [valueString, setValueString] = useState(\r\n\t\tprops.value.label || props.value.value\r\n\t);\r\n\tconst type = getType();\r\n\r\n\tfunction getType() {\r\n\t\tif (props.value.label === null) {\r\n\t\t\tif (props.value.datatype === null) {\r\n\t\t\t\treturn props.value.type;\r\n\t\t\t} else {\r\n\t\t\t\treturn props.value.datatype;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\treturn \"literal\";\r\n\t\t}\r\n\t}\r\n\r\n\t// Funzione che si occupa della modifica dei valori delle propietà da parte dell'utente\r\n\tfunction changeValueHandler(event) {\r\n\t\tconst newValue = event.target.value;\r\n\r\n\t\t/*\r\n\t\tconst comparison = props.value.comparison;\r\n\r\n\t\tif (\r\n\t\t\t(newValue.includes(\"<\") || newValue.includes(\">\")) &&\r\n\t\t\tcomparison !== \"numeric\"\r\n\t\t) {\r\n\t\t\talert(\r\n\t\t\t\t\"Puoi inserire '>' o '<' solo se effettui un confronto di tipo numerico\"\r\n\t\t\t);\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\t\r\n\t\tif (props.value.label !== null) {\r\n\t\t\tprops.value.label = newValue;\r\n\t\t} else {\r\n\t\t\tprops.value.value = newValue;\r\n\t\t}\r\n\t\t*/\r\n\t\t//props.changeValue(props.value.ID, props.value);\r\n\t\tsetValueString(newValue);\r\n\t}\r\n\r\n\tfunction possibleComparison() {\r\n\t\tif (type === \"literal\") {\r\n\t\t\treturn [\r\n\t\t\t\t<option key=\"exact-string\" value=\"exact-string\">\r\n\t\t\t\t\tExact String\r\n\t\t\t\t</option>,\r\n\t\t\t\t<option key=\"substring\" value=\"substring\">\r\n\t\t\t\t\tSubstring\r\n\t\t\t\t</option>,\r\n\t\t\t];\r\n\t\t}\r\n\t\tif (type === \"uri\") {\r\n\t\t\treturn [\r\n\t\t\t\t<option key=\"uri\" value=\"uri\">\r\n\t\t\t\t\tURI\r\n\t\t\t\t</option>,\r\n\t\t\t];\r\n\t\t}\r\n\t\treturn [\r\n\t\t\t<option key=\"type-based\" value=\"type-based\">\r\n\t\t\t\tType based comparison (default equal)\r\n\t\t\t</option>,\r\n\t\t\t<option key=\"regex\" value=\"regex\">\r\n\t\t\t\tRegex\r\n\t\t\t</option>,\r\n\t\t];\r\n\t}\r\n\r\n\t// Funzione che rende modificabile il valore dell'attributo scelto dall'utente\r\n\tfunction editButtonHandler() {\r\n\t\t// Viene modificato il valore all'interno dell'oggetto che indica se si sta modificando il valore\r\n\t\tprops.value.editing = true;\r\n\t\t// Viene utilizzata la funzione del parent che permette di applicare le modifiche\r\n\t\tprops.changeValue(props.value.ID, props.value, undefined);\r\n\t\tconsole.log(props.value);\r\n\t}\r\n\r\n\tfunction changeComparison(event) {\r\n\t\tprops.value.comparison = event.target.value;\r\n\t\tprops.changeValue(props.value.ID, props.value, undefined);\r\n\t}\r\n\r\n\tfunction applyEdit() {\r\n\t\tif (valueString.length === 0) {\r\n\t\t\talert(\"non può essere vuoto\");\r\n\t\t} else {\r\n\t\t\tprops.value.edited = true;\r\n\t\t\tprops.value.editing = false;\r\n\t\t\tif (props.value.label !== null) {\r\n\t\t\t\tprops.value.label = valueString;\r\n\t\t\t} else {\r\n\t\t\t\tprops.value.value = valueString;\r\n\t\t\t}\r\n\t\t\tprops.changeValue(props.value.ID, props.value, true);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction undoEdit() {\r\n\t\tprops.value.editing = false;\r\n\t\tprops.changeValue(props.value.ID, props.value, undefined);\r\n\t}\r\n\r\n\tfunction removeConstraint() {\r\n\t\tprops.value.edited = false;\r\n\t\tprops.changeValue(props.value.ID, props.value, false);\r\n\t}\r\n\t/* Se l'utente sta modificando il valore viene mostrato un form che permette la modifica e la selezione del tipo\r\n\t   di confronto che vuole effettuare per la nuova query */\r\n\treturn props.value.editing ? (\r\n\t\t<li>\r\n\t\t\t<Container fluid className=\"value-container\">\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\tname=\"propertyValue\"\r\n\t\t\t\t\t\t\tclassName=\"value\"\r\n\t\t\t\t\t\t\tvalue={valueString}\r\n\t\t\t\t\t\t\tonChange={changeValueHandler}\r\n\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t<Form.Text muted>\r\n\t\t\t\t\t\t\tThis value is type: \"{type}\"\r\n\t\t\t\t\t\t</Form.Text>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t<Form inline>\r\n\t\t\t\t\t\t\t<Form.Label className=\"my-1 mr-sm-2 float-sx\">\r\n\t\t\t\t\t\t\t\tChoose the type of comparison:\r\n\t\t\t\t\t\t\t</Form.Label>\r\n\r\n\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\tas=\"select\"\r\n\t\t\t\t\t\t\t\tclassName=\"my-1 mr-sm-2 float-dx\"\r\n\t\t\t\t\t\t\t\tid=\"inlineFormCustomSelectPref\"\r\n\t\t\t\t\t\t\t\tcustom\r\n\t\t\t\t\t\t\t\tsize=\"sm\"\r\n\t\t\t\t\t\t\t\tvalue={props.value.comparison}\r\n\t\t\t\t\t\t\t\tonChange={changeComparison}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{possibleComparison()}\r\n\t\t\t\t\t\t\t</Form.Control>\r\n\t\t\t\t\t\t</Form>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col className=\"btn-span\" md=\"auto\">\r\n\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t[\r\n\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\tid=\"applica\"\r\n\t\t\t\t\t\t\t\tclassName=\"editButton\"\r\n\t\t\t\t\t\t\t\tonClick={applyEdit}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tApplica\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t|\r\n\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\tid=\"annulla\"\r\n\t\t\t\t\t\t\t\tclassName=\"editButton\"\r\n\t\t\t\t\t\t\t\tonClick={undoEdit}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tAnnulla\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t</Container>\r\n\t\t</li>\r\n\t) : (\r\n\t\t<li className={props.value.edited ? \"modified\" : \"non-modified\"}>\r\n\t\t\t{props.value.label ? props.value.label : props.value.value}\r\n\t\t\t<span className=\"editButtonSpan\">\r\n\t\t\t\t[\r\n\t\t\t\t<button\r\n\t\t\t\t\tclassName=\"editButton\"\r\n\t\t\t\t\tid=\"modifica\"\r\n\t\t\t\t\tonClick={editButtonHandler}\r\n\t\t\t\t>\r\n\t\t\t\t\tEdit\r\n\t\t\t\t</button>\r\n\t\t\t\t]\r\n\t\t\t</span>\r\n\t\t\t{props.value.edited && (\r\n\t\t\t\t<span className=\"editButtonSpan\">\r\n\t\t\t\t\t[\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tid=\"annulla\"\r\n\t\t\t\t\t\tclassName=\"editButton\"\r\n\t\t\t\t\t\tonClick={removeConstraint}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tRemove\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t]\r\n\t\t\t\t</span>\r\n\t\t\t)}\r\n\t\t</li>\r\n\t);\r\n}\r\n/**\r\n * \r\n\t\t\t\t<Row>\r\n\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t<span id=\"editButtonSpan\">[ Apply | Undo]</span>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t\t\r\n\t\t\t\t\t\t\t\t<option value=\"default\">\r\n\t\t\t\t\t\t\t\t\tDefault (exactString or equal)\r\n\t\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t\t\t<option value=\"substring\">Substring</option>\r\n\t\t\t\t\t\t\t\t<option value=\"numeric\">Numeric</option>\r\n\t\t\t\t\t\t\t\t<option value=\"regex\">\r\n\t\t\t\t\t\t\t\t\tRegular Expression\r\n\t\t\t\t\t\t\t\t</option>\r\n*/\r\n","import React from \"react\";\r\nimport { Draggable } from \"react-beautiful-dnd\";\r\n\r\nimport Form from \"react-bootstrap/Form\";\r\n\r\nimport grip from \"./grip.svg\";\r\n\r\nimport AttributeValue from \"./AttributeValue\";\r\n\r\nexport default function Attribute(props) {\r\n\tfunction showChangeHandler() {\r\n\t\tprops.attribute.show = !props.attribute.show;\r\n\t\t/*Se l'utente vuole che un'attributo venga mostrato nella pagina dei risultati e questo non è già un vincolo viene impostato il booleano\r\n\t\t * che lo identifica come vincolo */\r\n\t\tif (props.attribute.show && !props.attribute.isConstraint) {\r\n\t\t\tprops.attribute.isConstraint = true;\r\n\t\t} else {\r\n\t\t\t/*Se l'utente toglie il check all'attributo per non effettuarne lo show, e l'attributo non contiene valori modificati\r\n\t\t\t *viene impostato a falso il booleano che lo identifica come vincolo */\r\n\t\t\tif (!props.attribute.show && props.attribute.isConstraint) {\r\n\t\t\t\tconst modifiedValues = props.attribute.value.filter(\r\n\t\t\t\t\t(value) => value.edited\r\n\t\t\t\t);\r\n\t\t\t\tprops.attribute.isConstraint = modifiedValues.length > 0;\r\n\t\t\t}\r\n\t\t}\r\n\t\tprops.changeAttribute(props.attribute.ID, props.attribute);\r\n\t}\r\n\r\n\t/* Funzione che permette la modifica di un valore dell'attributo attraverso la sostituzione dell'oggetto modificato\r\n\t   con il nuovo, nell'oggetto che contiene la risorsa */\r\n\tfunction changeValue(valueID, newValue, isConstraint) {\r\n\t\tconst aux = props.attribute;\r\n\t\tif (isConstraint !== undefined) {\r\n\t\t\tif (!isConstraint) {\r\n\t\t\t\tif (!aux.show) {\r\n\t\t\t\t\tconst modifiedValues = aux.value.filter(\r\n\t\t\t\t\t\t(value) => value.edited\r\n\t\t\t\t\t);\r\n\t\t\t\t\taux.isConstraint = modifiedValues.length > 0;\r\n\t\t\t\t} else {\r\n\t\t\t\t\taux.isConstraint = true;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\taux.isConstraint = isConstraint;\r\n\t\t\t}\r\n\t\t}\r\n\t\tconst indexOfProp = aux.value.findIndex(\r\n\t\t\t(value) => value.ID === valueID\r\n\t\t);\r\n\t\taux.value[indexOfProp] = newValue;\r\n\t\tprops.changeAttribute(props.attribute.ID, aux);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Draggable draggableId={props.attribute.ID} index={props.index}>\r\n\t\t\t{(provided, snapshot) => (\r\n\t\t\t\t<tr\r\n\t\t\t\t\t{...provided.draggableProps}\r\n\t\t\t\t\tref={provided.innerRef}\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tbackgroundColor: snapshot.isDragging && \"#abcdef\",\r\n\t\t\t\t\t\t...provided.draggableProps.style,\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tclassName=\"attribute-row\"\r\n\t\t\t\t>\r\n\t\t\t\t\t<td className=\"drag-cell\" {...provided.dragHandleProps}>\r\n\t\t\t\t\t\t<img src={grip} alt=\"drag\" />\r\n\t\t\t\t\t</td>\r\n\r\n\t\t\t\t\t<td className=\"property-cell\">\r\n\t\t\t\t\t\t{props.attribute.property.label ||\r\n\t\t\t\t\t\t\tprops.attribute.property.uri}\r\n\t\t\t\t\t</td>\r\n\r\n\t\t\t\t\t<td className=\"value-cell\">\r\n\t\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t\t{props.attribute.value.map((value) => (\r\n\t\t\t\t\t\t\t\t<AttributeValue\r\n\t\t\t\t\t\t\t\t\tkey={value.ID}\r\n\t\t\t\t\t\t\t\t\tvalue={value}\r\n\t\t\t\t\t\t\t\t\tchangeValue={changeValue}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t</td>\r\n\r\n\t\t\t\t\t<td className=\"show-cell\">\r\n\t\t\t\t\t\t<Form.Check\r\n\t\t\t\t\t\t\ttype=\"checkbox\"\r\n\t\t\t\t\t\t\tname={props.attribute.ID}\r\n\t\t\t\t\t\t\tchecked={props.attribute.show}\r\n\t\t\t\t\t\t\tonChange={showChangeHandler}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</td>\r\n\t\t\t\t</tr>\r\n\t\t\t)}\r\n\t\t</Draggable>\r\n\t);\r\n}\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\";\r\n\r\nimport Table from \"react-bootstrap/Table\";\r\n\r\nimport Attribute from \"./Attribute\";\r\n\r\nexport default function ResourceTable(props) {\r\n\t// Viene modificato l'attributo con i nuovi valori\r\n\tfunction changeAttribute(attributeID, newAttribute) {\r\n\t\tconst aux = [...props.resource];\r\n\t\tconst indexOfProp = aux.findIndex(\r\n\t\t\t(attribute) => attribute.ID === attributeID\r\n\t\t);\r\n\t\taux[indexOfProp] = newAttribute;\r\n\t\tprops.setResource(aux);\r\n\t}\r\n\r\n\tfunction onDragEnd(result) {\r\n\t\tconst { destination, source } = result;\r\n\t\t// Se destination è null, ovvero se l'utente trascina la riga dove non può essere spostata non viene effettuata nessuna modifca\r\n\t\tif (!destination) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (\r\n\t\t\tdestination.droppableId === source.droppableId &&\r\n\t\t\tdestination.index === source.index\r\n\t\t) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t// Swap di due elementi\r\n\t\t// [props.data[source.index], props.data[destination.index]] = [props.data[destination.index], props.data[source.index]]\r\n\r\n\t\t// Viene rimosso l'elemento trascinato in nuova posizione dall'utente e salvato nella vaiabile droppedElement\r\n\t\tlet droppedElement = props.resource.splice(source.index, 1)[0];\r\n\t\t// Viene inserito l'elemento nella nuova posizione\r\n\t\tprops.resource.splice(destination.index, 0, droppedElement);\r\n\t\tconsole.log(droppedElement, destination.index);\r\n\t\t/*\r\n\t\tconsole.log(\r\n\t\t\t\"elemento precedente : \",\r\n\t\t\tprops.resource[destination.index - 1]\r\n\t\t);\r\n\t\tconsole.log(\r\n\t\t\t\"elemento successivo : \",\r\n\t\t\tprops.resource[destination.index + 1]\r\n\t\t);\r\n\t\t*/\r\n\t\t//chiamata all'api che salva l'ordine degli attributi attraverso attributo modificato di ordine, attributo precedente e successvo\r\n\t\t// Da definire\r\n\t\t/*\r\n\t\taxios\r\n\t\t\t.post(\"/save_order\", {\r\n\t\t\t\tselected: props.resource[destination.index].property.uri,\r\n\t\t\t\tprev: props.resource[destination.index - 1].property.uri,\r\n\t\t\t\tnext: props.resource[destination.index + 1].property.uri,\r\n\r\n\t\t\t})\r\n\t\t\t.then((response) => console.log(response))\r\n\t\t\t.catch((error) => console.log(error));\r\n\t\t*/\r\n\t\t// Chiamata all'api che salva l'ordine degli attributi inviando l'intera lista di attributi della risorsa\r\n\t\tconst attributes = props.resource.map(\r\n\t\t\t(attribute) => attribute.property.uri\r\n\t\t);\r\n\t\tconsole.log(attributes);\r\n\r\n\t\taxios\r\n\t\t\t.post(\"/save_order\", {\r\n\t\t\t\tattributes: attributes,\r\n\t\t\t})\r\n\t\t\t.then((response) => console.log(response))\r\n\t\t\t.catch((error) => console.log(error));\r\n\t}\r\n\r\n\treturn (\r\n\t\t<DragDropContext onDragEnd={onDragEnd}>\r\n\t\t\t<Table striped bordered hover id=\"resource-table\">\r\n\t\t\t\t<thead>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<th className=\"drag-cell\">#</th>\r\n\t\t\t\t\t\t<th className=\"property-cell\">Proprietà</th>\r\n\t\t\t\t\t\t<th className=\"value-cell\">Valori</th>\r\n\t\t\t\t\t\t<th className=\"show-cell\">Show</th>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t</thead>\r\n\t\t\t\t{\r\n\t\t\t\t\t<Droppable droppableId=\"droppable\">\r\n\t\t\t\t\t\t{(provided) => (\r\n\t\t\t\t\t\t\t<tbody\r\n\t\t\t\t\t\t\t\tref={provided.innerRef}\r\n\t\t\t\t\t\t\t\t{...provided.droppableProps}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{props.resource.map((attribute, index) => (\r\n\t\t\t\t\t\t\t\t\t<Attribute\r\n\t\t\t\t\t\t\t\t\t\tkey={attribute.ID}\r\n\t\t\t\t\t\t\t\t\t\tindex={index}\r\n\t\t\t\t\t\t\t\t\t\tattribute={attribute}\r\n\t\t\t\t\t\t\t\t\t\tchangeAttribute={changeAttribute}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t{provided.placeholder}\r\n\t\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</Droppable>\r\n\t\t\t\t}\r\n\t\t\t</Table>\r\n\t\t</DragDropContext>\r\n\t);\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport { Container } from \"react-bootstrap\";\r\n\r\nexport default function ResourcePreview({ resource, endpointUrl, language }) {\r\n\tfunction redirectToResource() {\r\n\t\twindow.location.href = `/resource?endpoint=${endpointUrl}&language=${language}&uri=${resource.uri}`;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Container className=\"resource-preview\" onClick={redirectToResource}>\r\n\t\t\t<p className=\"result-title\">{resource.label}</p>\r\n\t\t\t<p className=\"result-url\">URI: {resource.uri}</p>\r\n\t\t\t<p className=\"result-comment\">\r\n\t\t\t\t{resource.comment || \"No comment avaiable for this resource\"}\r\n\t\t\t</p>\r\n\t\t\t{resource.attributes?.map((attribute) => (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<hr />\r\n\t\t\t\t\t<span style={{ fontWeight: \"500\" }}>\r\n\t\t\t\t\t\t{attribute.attribute} :\r\n\t\t\t\t\t</span>\r\n\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t{attribute.values.map((value) => (\r\n\t\t\t\t\t\t\t<li>{value}</li>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t</>\r\n\t\t\t))}\r\n\t\t</Container>\r\n\t);\r\n}\r\n","export default __webpack_public_path__ + \"static/media/tail-spin.309ae91b.svg\";","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\n// Import del file per lo style Sass\nimport \"./ResourcePage.scss\";\n\nimport Container from \"react-bootstrap/Container\"; //Container\nimport Navbar from \"react-bootstrap/Navbar\"; //Navbar\nimport Nav from \"react-bootstrap/Nav\"; //Nav\nimport Button from \"react-bootstrap/Button\";\nimport Tabs from \"react-bootstrap/Tabs\";\nimport Tab from \"react-bootstrap/Tab\";\n\nimport ResourceTable from \"./ResourceTable\";\nimport ResourcePreview from \"./ResourcePreview\";\nimport loadingImage from \"./tail-spin.svg\";\n\nexport default function ResourcePage({\n\trequestedResource,\n\tlabel,\n\tcomment,\n\tlanguage,\n\tendpoint,\n}) {\n\tconst [resource, setResource] = useState(requestedResource);\n\n\tconst [request, setRequest] = useState();\n\tconst [queryResult, setQueryResult] = useState(undefined);\n\tconst [selectedTab, setSelectedTab] = useState(\"resource\");\n\tconst [isLoading, setIsLoading] = useState(false);\n\n\t//! DA UTILIZZARE SOLO PER DEBUG, SI PUO' ELIMINARE PER LA CREAZIONE DELLA BUILD\n\t/*\n\tconst [resourceLabel, setResourceLabel] = useState();\n\tconst [resourceComment, setResourceComment] = useState();\n\n\tfunction getResource() {\n\t\taxios.get(\"/prova\").then((response) => {\n\t\t\tconsole.log(response.data);\n\t\t\tsetResource(response.data.data);\n\t\t\tsetResourceLabel(response.data.label);\n\t\t\tsetResourceComment(response.data.comment);\n\t\t});\n\t}\n\n\tuseEffect(getResource, []);\n\t*/\n\tasync function query() {\n\t\t/*\n\t\t*Copia più lenta\n\t\tconsole.time(\"json copy\");\n\t\tconst json = JSON.parse(JSON.stringify(resource));\n\t\tconsole.timeEnd(\"json copy\");\n\t\t*/\n\t\tsetIsLoading(true);\n\t\t// Deep copy della risorsa\n\t\tconst resourceCopy = resource?.map((attribute) => {\n\t\t\treturn { ...attribute };\n\t\t});\n\t\t// Filter dei soli attributi che sono vincoli selezionati dall'utente\n\t\tconst constraints = resourceCopy.filter(\n\t\t\t({ ...attribute }) => attribute.isConstraint\n\t\t);\n\t\t// Map che per ogni attributo lascia solo i valori modificati dall'utente\n\t\tconstraints.map(\n\t\t\t(attribute) =>\n\t\t\t\t(attribute.value = attribute.value.filter(\n\t\t\t\t\t(value) => value.edited\n\t\t\t\t))\n\t\t);\n\t\t// !Debug\n\t\tconsole.log(constraints);\n\t\t// Se esiste una richiesta precedente ancora in elaborazione viene cancellata.\n\t\tif (request) {\n\t\t\tconsole.log(\"CANCELLATO\"); //!DEBUG\n\t\t\trequest.cancel(\"axios request cancelled\");\n\t\t\tsetRequest(null);\n\t\t}\n\t\tconst axiosSource = axios.CancelToken.source();\n\t\t// Viene memorizzato nello stato apposito\n\t\tsetRequest(axiosSource);\n\t\t// Richiesta al server, a cui viene passato anche il cancelToken\n\n\t\t// Post request al server\n\t\tawait axios\n\t\t\t.post(\n\t\t\t\t\"/query\",\n\t\t\t\t{\n\t\t\t\t\tendpointUrl: endpoint,\n\t\t\t\t\tlanguage: language,\n\t\t\t\t\tconstraints: constraints,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tcancelToken: axiosSource.token,\n\t\t\t\t}\n\t\t\t)\n\t\t\t.then((response) => {\n\t\t\t\tconsole.log(response.data);\n\t\t\t\tsetQueryResult(response.data);\n\t\t\t\t// Viene cancellata la richiesta dallo stato in quanto è stata completata\n\t\t\t\tsetRequest(null);\n\t\t\t\tsetIsLoading(false);\n\t\t\t\tsetSelectedTab(\"results\");\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tif (error.message === \"axios request cancelled\") {\n\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\"Nuova richiesta ricevuta, questa viene cancellata.\"\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\tconsole.log(\"Errore nell'esecuzione della query.\", error);\n\n\t\t\t\t\tsetIsLoading(false);\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\treturn (\n\t\t<Container fluid id=\"main-container\">\n\t\t\t{isLoading && (\n\t\t\t\t<div id=\"loading\">\n\t\t\t\t\t<img src={loadingImage} alt=\"Loading...\" />\n\t\t\t\t</div>\n\t\t\t)}\n\t\t\t<Navbar variant=\"dark\" id=\"navbar\">\n\t\t\t\t<Navbar.Brand href=\"/homepage\">Swipe</Navbar.Brand>\n\n\t\t\t\t<Nav className=\"mr-auto\">\n\t\t\t\t\t<Nav.Link href=\"/homepage\">Home</Nav.Link>\n\t\t\t\t\t<Nav.Link href=\"#about\">About</Nav.Link>\n\t\t\t\t</Nav>\n\t\t\t</Navbar>\n\t\t\t{resource !== [] && resource !== undefined ? (\n\t\t\t\t<Tabs\n\t\t\t\t\tclassName=\"width-90-centered mt-1\"\n\t\t\t\t\tactiveKey={selectedTab}\n\t\t\t\t\tonSelect={(tab) => setSelectedTab(tab)}\n\t\t\t\t>\n\t\t\t\t\t<Tab eventKey=\"resource\" title=\"Resource\" className=\"tab\">\n\t\t\t\t\t\t<div className=\"width-90-centered mt-2\">\n\t\t\t\t\t\t\t<h3>{label}</h3>\n\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t{comment ||\n\t\t\t\t\t\t\t\t\t\"No comment avaiable for this resource\"}\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<ResourceTable\n\t\t\t\t\t\t\tresource={resource}\n\t\t\t\t\t\t\tsetResource={setResource}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<Container fluid id=\"footer\">\n\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\tDopo aver modificato gli attributi per\n\t\t\t\t\t\t\t\teffettuare una query clicca il tasto QUERY\n\t\t\t\t\t\t\t\tpresente sulla destra\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t<Button variant=\"success\" size=\"lg\" onClick={query}>\n\t\t\t\t\t\t\t\tEsegui Query\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</Container>\n\t\t\t\t\t</Tab>\n\t\t\t\t\t<Tab\n\t\t\t\t\t\teventKey=\"results\"\n\t\t\t\t\t\ttitle=\"Query Results\"\n\t\t\t\t\t\tclassName=\"tab\"\n\t\t\t\t\t\tdisabled={queryResult === undefined ? true : false}\n\t\t\t\t\t>\n\t\t\t\t\t\t{queryResult?.map((resource) => (\n\t\t\t\t\t\t\t<ResourcePreview\n\t\t\t\t\t\t\t\tkey={resource.ID}\n\t\t\t\t\t\t\t\tresource={resource}\n\t\t\t\t\t\t\t\tendpointUrl={endpoint}\n\t\t\t\t\t\t\t\tlanguage={language}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</Tab>\n\t\t\t\t</Tabs>\n\t\t\t) : (\n\t\t\t\t<Container id=\"notfound-container\">\n\t\t\t\t\t<h3 className=\"notfound-msg\">\n\t\t\t\t\t\tLa risorsa richiesta non è stata trovata\n\t\t\t\t\t</h3>\n\t\t\t\t\t<Button>GO TO HOMEPAGE</Button>\n\t\t\t\t</Container>\n\t\t\t)}\n\t\t</Container>\n\t);\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nimport ResourcePage from \"./resource/ResourcePage\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<ResourcePage\n\t\t\trequestedResource={window.resource.requestedResource}\n\t\t\tlabel={window.resource.label}\n\t\t\tcomment={window.resource.comment}\n\t\t\tlanguage={window.resource.language}\n\t\t\tendpoint={window.resource.endpoint}\n\t\t/>\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
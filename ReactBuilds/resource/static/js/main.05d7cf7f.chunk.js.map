{"version":3,"sources":["grip.svg","AttributeValue.jsx","Attribute.jsx","ResourceTable.jsx","App.jsx","index.jsx"],"names":["AttributeValue","props","value","editing","type","name","id","label","htmlFor","comparison","className","edited","Attribute","draggableId","attribute","ID","index","provided","snapshot","draggableProps","ref","innerRef","style","backgroundColor","isDragging","dragHandleProps","src","grip","alt","property","uri","map","checked","show","ResourceTable","onDragEnd","result","destination","source","droppableId","droppedElement","data","splice","Table","striped","bordered","hover","droppableProps","resource","placeholder","App","useState","Container","fluid","Navbar","variant","Brand","href","Nav","Link","Button","size","ReactDOM","render","StrictMode","window","document","getElementById"],"mappings":"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","file":"static/js/main.05d7cf7f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/grip.8bc37f34.svg\";","import React from \"react\";\r\n\r\nexport default function AttributeValue(props) {\r\n\treturn props.value.editing ? (\r\n\t\t<li>\r\n\t\t\t<input\r\n\t\t\t\ttype=\"text\"\r\n\t\t\t\tname=\"propertyValue\"\r\n\t\t\t\tid=\"values\"\r\n\t\t\t\tvalue={props.value.label || props.value.value}\r\n\t\t\t/>\r\n\t\t\t<label htmlFor=\"valueType\">\r\n\t\t\t\tSeleziona il tipo di confronto vuoi che avvenga:\r\n\t\t\t</label>\r\n\t\t\t<select\r\n\t\t\t\tid=\"valueType\"\r\n\t\t\t\tname=\"valueTypes\"\r\n\t\t\t\tvalue={props.value.comparison}\r\n\t\t\t>\r\n\t\t\t\t<option value=\"default\">Default (exactString or equal)</option>\r\n\t\t\t\t<option value=\"substring\">Substring</option>\r\n\t\t\t\t<option value=\"numeric\">Numeric</option>\r\n\t\t\t\t<option value=\"regex\">Regular Expression</option>\r\n\t\t\t</select>\r\n\r\n\t\t\t<span id=\"editButtonSpan\">[ Apply | Undo]</span>\r\n\t\t</li>\r\n\t) : (\r\n\t\t<li className={props.value.edited ? \"modified\" : \"non-modified\"}>\r\n\t\t\t{props.value.label ? props.value.label : props.value.value}\r\n\t\t\t<span id=\"editButtonSpan\">[Edit]</span>\r\n\t\t</li>\r\n\t);\r\n}\r\n","import React from \"react\";\r\nimport { Draggable } from \"react-beautiful-dnd\";\r\n\r\nimport grip from \"./grip.svg\";\r\n\r\nimport AttributeValue from \"./AttributeValue\";\r\n\r\nexport default function Attribute(props) {\r\n\treturn (\r\n\t\t<Draggable draggableId={props.attribute.ID} index={props.index}>\r\n\t\t\t{(provided, snapshot) => (\r\n\t\t\t\t<tr\r\n\t\t\t\t\t{...provided.draggableProps}\r\n\t\t\t\t\tref={provided.innerRef}\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tbackgroundColor: snapshot.isDragging && \"#abcdef\",\r\n\t\t\t\t\t\t...provided.draggableProps.style,\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tclassName=\"attribute-row\"\r\n\t\t\t\t>\r\n\t\t\t\t\t<td className=\"drag-cell\" {...provided.dragHandleProps}>\r\n\t\t\t\t\t\t<img src={grip} alt=\"drag\" />\r\n\t\t\t\t\t</td>\r\n\r\n\t\t\t\t\t<td className=\"property-cell\">\r\n\t\t\t\t\t\t{props.attribute.property.label ||\r\n\t\t\t\t\t\t\tprops.attribute.property.uri}\r\n\t\t\t\t\t</td>\r\n\r\n\t\t\t\t\t<td className=\"value-cell\">\r\n\t\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t\t{props.attribute.value.map((value) => (\r\n\t\t\t\t\t\t\t\t<AttributeValue key={value.ID} value={value} />\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t</td>\r\n\r\n\t\t\t\t\t<td className=\"show-cell\">\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype=\"checkbox\"\r\n\t\t\t\t\t\t\tname={props.attribute.ID}\r\n\t\t\t\t\t\t\tchecked={props.attribute.show}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</td>\r\n\t\t\t\t</tr>\r\n\t\t\t)}\r\n\t\t</Draggable>\r\n\t);\r\n}\r\n","import React from \"react\";\r\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\";\r\n\r\nimport Table from \"react-bootstrap/Table\";\r\n\r\nimport Attribute from \"./Attribute\";\r\n\r\nexport default function ResourceTable(props) {\r\n\tfunction onDragEnd(result) {\r\n\t\tconst { destination, source } = result;\r\n\t\t// Se destination è null, ovvero se l'utente trascina la riga dove non può essere spostata non viene effettuata nessuna modifca\r\n\t\tif (!destination) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (\r\n\t\t\tdestination.droppableId === source.droppableId &&\r\n\t\t\tdestination.index === source.index\r\n\t\t) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t// Swap di due elementi\r\n\t\t// [props.data[source.index], props.data[destination.index]] = [props.data[destination.index], props.data[source.index]]\r\n\r\n\t\t// Viene rimosso l'elemento trascinato in nuova posizione dall'utente e salvato nella vaiabile droppedElement\r\n\t\tlet droppedElement = props.data.splice(source.index, 1)[0];\r\n\t\t// Viene inserito l'elemento nella nuova posizione\r\n\t\tprops.data.splice(destination.index, 0, droppedElement);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<DragDropContext onDragEnd={onDragEnd}>\r\n\t\t\t<Table striped bordered hover id=\"resource-table\">\r\n\t\t\t\t<thead>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<th className=\"drag-cell\">#</th>\r\n\t\t\t\t\t\t<th className=\"property-cell\">Proprietà</th>\r\n\t\t\t\t\t\t<th className=\"value-cell\">Valori</th>\r\n\t\t\t\t\t\t<th className=\"show-cell\">Show</th>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t</thead>\r\n\t\t\t\t{\r\n\t\t\t\t\t<Droppable droppableId=\"droppable\">\r\n\t\t\t\t\t\t{(provided) => (\r\n\t\t\t\t\t\t\t<tbody\r\n\t\t\t\t\t\t\t\tref={provided.innerRef}\r\n\t\t\t\t\t\t\t\t{...provided.droppableProps}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{props.resource.map((attribute, index) => (\r\n\t\t\t\t\t\t\t\t\t<Attribute\r\n\t\t\t\t\t\t\t\t\t\tkey={attribute.ID}\r\n\t\t\t\t\t\t\t\t\t\tattribute={attribute}\r\n\t\t\t\t\t\t\t\t\t\tindex={index}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t{provided.placeholder}\r\n\t\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</Droppable>\r\n\t\t\t\t}\r\n\t\t\t</Table>\r\n\t\t</DragDropContext>\r\n\t);\r\n}\r\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\n// Import del file per lo style Sass\nimport \"./ResourcePage.scss\";\n\nimport Container from \"react-bootstrap/Container\"; //Container\nimport Navbar from \"react-bootstrap/Navbar\"; //Navbar\nimport Nav from \"react-bootstrap/Nav\"; //Nav\nimport Button from \"react-bootstrap/Button\";\n\nimport ResourceTable from \"./ResourceTable\";\n\nfunction App(props) {\n\tconst [resource, setResource] = useState(props.resource);\n\n\tfunction getResource() {\n\t\taxios.get(\"/prova\").then((response) => {\n\t\t\tsetResource(response.data);\n\t\t});\n\t}\n\n\t// useEffect(getResource, []);\n\n\treturn (\n\t\t<Container fluid id=\"main-container\">\n\t\t\t<Navbar variant=\"dark\" id=\"navbar\">\n\t\t\t\t<Navbar.Brand href=\"/home\">Swipe</Navbar.Brand>\n\n\t\t\t\t<Nav className=\"mr-auto\">\n\t\t\t\t\t<Nav.Link href=\"/home\">Home</Nav.Link>\n\t\t\t\t\t<Nav.Link href=\"#about\">About</Nav.Link>\n\t\t\t\t</Nav>\n\t\t\t</Navbar>\n\t\t\t<ResourceTable resource={resource} />\n\t\t\t<Container fluid id=\"footer\">\n\t\t\t\t<p>\n\t\t\t\t\tDopo aver modificato gli attributi per effettuare una query\n\t\t\t\t\tclicca il tasto QUERY presente sulla destra\n\t\t\t\t</p>\n\t\t\t\t<Button variant=\"success\" size=\"lg\">\n\t\t\t\t\tEsegui Query\n\t\t\t\t</Button>\n\t\t\t</Container>\n\t\t</Container>\n\t);\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App resource={window.resource} />\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n"],"sourceRoot":""}